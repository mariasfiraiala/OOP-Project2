Starting audit...
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Page.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Page.java:11:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Page.java:15:17: Parameter name should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Page.java:15:30: Parameter possibleActions should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Page.java:20:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Page.java:20:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Page.java:24:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'getNextPages' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'getNextPages' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Page.java:28:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'setNextPages' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'setNextPages' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Page.java:28:30: Parameter nextPages should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Page.java:32:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'getPossibleActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'getPossibleActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Page.java:36:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'setPossibleActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'setPossibleActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Page.java:36:36: Parameter possibleActions should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Login.java:9:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Login.java:13:18: Parameter name should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Login.java:13:31: Parameter possibleActions should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Login.java:17:5: Class 'Login' looks like designed for extension (can be subclassed), but the method 'login' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Login' final or making the method 'login' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Login.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Login.java:17:23: Parameter credentials should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Login.java:17:53: Parameter output should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Login.java:19: Line is longer than 100 characters (found 169). [LineLength]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Login.java:22: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Login.java:27: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Logout.java:8:19: Parameter name should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Logout.java:8:32: Parameter possibleActions should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Logout.java:12:5: Class 'Logout' looks like designed for extension (can be subclassed), but the method 'logout' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Logout' final or making the method 'logout' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Logout.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Logout.java:12:24: Parameter currentUser should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Movies.java:15:19: Parameter name should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Movies.java:15:32: Parameter possibleActions should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Movies.java:19:5: Class 'Movies' looks like designed for extension (can be subclassed), but the method 'search' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movies' final or making the method 'search' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Movies.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Movies.java:19:24: Parameter startsWith should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Movies.java:19:43: Parameter output should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Movies.java:28: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Movies.java:31:5: Class 'Movies' looks like designed for extension (can be subclassed), but the method 'filter' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movies' final or making the method 'filter' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Movies.java:31:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Movies.java:31:24: Parameter filter should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Movies.java:31:45: Parameter output should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Movies.java:69: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Movies.java:72:31: Parameter movies should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Movies.java:72:56: Parameter mode should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Movies.java:80:33: Parameter movies should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Movies.java:80:58: Parameter mode should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/SeeDetails.java:6:23: Parameter name should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/SeeDetails.java:6:36: Parameter possibleActions should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Authenticated.java:5:26: Parameter name should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Authenticated.java:5:39: Parameter possibleActions should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Upgrades.java:6:21: Parameter name should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Upgrades.java:6:34: Parameter possibleActions should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Register.java:10:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Register.java:14:21: Parameter name should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Register.java:14:34: Parameter possibleActions should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Register.java:18:5: Class 'Register' looks like designed for extension (can be subclassed), but the method 'register' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Register' final or making the method 'register' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Register.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Register.java:18:26: Parameter credentials should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Register.java:18:56: Parameter output should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Register.java:22: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/Register.java:33: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/PageHierarchy.java:5:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/pages/PageHierarchy.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:9:13: Using the '.*' form of import should be avoided - pages.*. [AvoidStarImport]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:14:1: Class Commands should be declared as final. [FinalClass]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:17:35: Parameter action should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:17:55: Parameter output should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:28:13: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:29: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:37:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:37:31: Parameter action should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:37:51: Parameter output should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:39: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:42:13: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:44: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:47: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:50: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:53: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:59:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:59:30: Parameter output should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:67:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:67:42: Parameter currentUser should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:67:60: Parameter output should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:75:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:75:38: Parameter currentUser should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:75:56: Parameter output should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:83: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:83:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:83:47: Parameter currentUser should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:83:65: Parameter currentMovies should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/commands/Commands.java:83:97: Parameter output should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/checker/CheckStyleConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/SortInput.java:8:5: Class 'SortInput' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortInput' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/SortInput.java:12:5: Class 'SortInput' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortInput' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/SortInput.java:12:27: Parameter rating should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/SortInput.java:16:5: Class 'SortInput' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortInput' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/SortInput.java:20:5: Class 'SortInput' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortInput' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/SortInput.java:20:29: Parameter duration should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/UserInput.java:6:22: Parameter user should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/UserInput.java:10:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/UserInput.java:14:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/UserInput.java:14:32: Parameter credentials should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/ContainsInput.java:11:5: Class 'ContainsInput' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ContainsInput' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/ContainsInput.java:15:5: Class 'ContainsInput' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ContainsInput' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/ContainsInput.java:15:27: Parameter actors should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/ContainsInput.java:19:5: Class 'ContainsInput' looks like designed for extension (can be subclassed), but the method 'getGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ContainsInput' final or making the method 'getGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/ContainsInput.java:23:5: Class 'ContainsInput' looks like designed for extension (can be subclassed), but the method 'setGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ContainsInput' final or making the method 'setGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/ContainsInput.java:23:26: Parameter genre should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/CredentialsInput.java:14:5: Class 'CredentialsInput' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CredentialsInput' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/CredentialsInput.java:18:5: Class 'CredentialsInput' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CredentialsInput' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/CredentialsInput.java:18:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/CredentialsInput.java:22:5: Class 'CredentialsInput' looks like designed for extension (can be subclassed), but the method 'getPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CredentialsInput' final or making the method 'getPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/CredentialsInput.java:26:5: Class 'CredentialsInput' looks like designed for extension (can be subclassed), but the method 'setPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CredentialsInput' final or making the method 'setPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/CredentialsInput.java:26:29: Parameter password should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/CredentialsInput.java:30:5: Class 'CredentialsInput' looks like designed for extension (can be subclassed), but the method 'getAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CredentialsInput' final or making the method 'getAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/CredentialsInput.java:34:5: Class 'CredentialsInput' looks like designed for extension (can be subclassed), but the method 'setAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CredentialsInput' final or making the method 'setAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/CredentialsInput.java:34:32: Parameter accountType should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/CredentialsInput.java:38:5: Class 'CredentialsInput' looks like designed for extension (can be subclassed), but the method 'getCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CredentialsInput' final or making the method 'getCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/CredentialsInput.java:42:5: Class 'CredentialsInput' looks like designed for extension (can be subclassed), but the method 'setCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CredentialsInput' final or making the method 'setCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/CredentialsInput.java:42:28: Parameter country should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/CredentialsInput.java:46:5: Class 'CredentialsInput' looks like designed for extension (can be subclassed), but the method 'getBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CredentialsInput' final or making the method 'getBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/CredentialsInput.java:50:5: Class 'CredentialsInput' looks like designed for extension (can be subclassed), but the method 'setBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CredentialsInput' final or making the method 'setBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/CredentialsInput.java:50:28: Parameter balance should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/ActionInput.java:23:25: Parameter type should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/ActionInput.java:31:25: Parameter page should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/ActionInput.java:39:26: Parameter movie should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/ActionInput.java:47:28: Parameter feature should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/ActionInput.java:55:32: Parameter credentials should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/ActionInput.java:63:31: Parameter startsWith should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/ActionInput.java:71:28: Parameter filters should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/ActionInput.java:79:26: Parameter count should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/ActionInput.java:87:25: Parameter rate should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/ActionInput.java:95:31: Parameter objectType should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/FiltersInput.java:9:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'getSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'getSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/FiltersInput.java:13:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'setSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'setSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/FiltersInput.java:13:25: Parameter sort should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/FiltersInput.java:17:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'getContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'getContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/FiltersInput.java:21:5: Class 'FiltersInput' looks like designed for extension (can be subclassed), but the method 'setContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FiltersInput' final or making the method 'setContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/FiltersInput.java:21:29: Parameter contains should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/DataInput.java:6:26: Variable 'users' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/DataInput.java:7:27: Variable 'movies' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/DataInput.java:8:28: Variable 'actions' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/DataInput.java:12:5: Class 'DataInput' looks like designed for extension (can be subclassed), but the method 'getUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataInput' final or making the method 'getUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/DataInput.java:16:5: Class 'DataInput' looks like designed for extension (can be subclassed), but the method 'setUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataInput' final or making the method 'setUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/DataInput.java:16:26: Parameter users should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/DataInput.java:20:5: Class 'DataInput' looks like designed for extension (can be subclassed), but the method 'getMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataInput' final or making the method 'getMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/DataInput.java:24:5: Class 'DataInput' looks like designed for extension (can be subclassed), but the method 'setMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataInput' final or making the method 'setMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/DataInput.java:24:27: Parameter movies should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/DataInput.java:28:5: Class 'DataInput' looks like designed for extension (can be subclassed), but the method 'getActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataInput' final or making the method 'getActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/DataInput.java:32:5: Class 'DataInput' looks like designed for extension (can be subclassed), but the method 'setActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DataInput' final or making the method 'setActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/DataInput.java:32:28: Parameter actions should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/MovieInput.java:14:23: Parameter movie should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/MovieInput.java:23:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/MovieInput.java:27:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/MovieInput.java:27:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/MovieInput.java:31:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/MovieInput.java:35:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'setYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'setYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/MovieInput.java:35:25: Parameter year should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/MovieInput.java:39:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/MovieInput.java:43:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/MovieInput.java:43:29: Parameter duration should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/MovieInput.java:47:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/MovieInput.java:51:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'setGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'setGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/MovieInput.java:51:27: Parameter genres should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/MovieInput.java:55:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/MovieInput.java:59:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/MovieInput.java:59:27: Parameter actors should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/MovieInput.java:63:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'getCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'getCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/MovieInput.java:67:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'setCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'setCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/input/MovieInput.java:67:36: Parameter countriesBanned should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:10:40: '15' is a magic number. [MagicNumber]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:12:13: Variable 'isRegistered' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:22:17: Parameter user should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:22:33: Parameter movies should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:31:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getIsRegistered' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getIsRegistered' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:35:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setIsRegistered' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setIsRegistered' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:35:33: Parameter registered should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:39:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getVisibleMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getVisibleMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:43:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setVisibleMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setVisibleMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:43:34: Parameter visibleMovies should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:47:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getPurchasedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getPurchasedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:51:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setPurchasedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setPurchasedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:51:36: Parameter purchasedMovies should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:55:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getWatchedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getWatchedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:59:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setWatchedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setWatchedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:59:34: Parameter watchedMovies should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:63:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getLikedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getLikedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:67:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setLikedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setLikedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:67:32: Parameter likedMovies should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:71:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getRatedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getRatedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:75:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setRatedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setRatedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:75:32: Parameter ratedMovies should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:79:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getTokensCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getTokensCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:83:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setTokensCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setTokensCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:83:32: Parameter tokensCount should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:87:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getNumFreePremiumMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getNumFreePremiumMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:91:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setNumFreePremiumMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setNumFreePremiumMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/User.java:91:41: Parameter numFreePremiumMovies should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/Movie.java:10:18: Parameter movie should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/Movie.java:16:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/Movie.java:20:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/Movie.java:20:27: Parameter rating should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/Movie.java:24:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getNumRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getNumRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/Movie.java:28:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setNumRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setNumRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/Movie.java:28:31: Parameter numRatings should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/Movie.java:32:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getNumLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getNumLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/Movie.java:32:30: '{' at column 30 should have line break after. [LeftCurly]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/Movie.java:34:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setNumLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setNumLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/info/Movie.java:34:29: Parameter numLikes should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/platform/Session.java:16:1: Class Session should be declared as final. [FinalClass]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/platform/Session.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/platform/Session.java:24:30: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/platform/Session.java:34:30: Parameter allMovies should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/platform/Session.java:42:29: Parameter allUsers should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/platform/Session.java:50:32: Parameter currentUser should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/platform/Session.java:58:32: Parameter currentPage should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/platform/Session.java:62:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/platform/Session.java:62:28: Parameter data should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/platform/Session.java:71:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/platform/Session.java:71:30: Parameter actions should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/platform/Session.java:71:62: Parameter output should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/platform/Session.java:87:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/main/Main.java:12:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/main/Main.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/main/Main.java:13:29: Parameter args should be final. [FinalParameters]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/main/Main.java:16:40: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/main/Test.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /home/maria/Documents/school-work/git-stuff/OOP-Project2.git/./src/main/Test.java:11:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
Audit done.
Checkstyle ends with 226 errors.
